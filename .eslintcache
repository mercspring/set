[{"/Users/merc/code/set/src/index.js":"1","/Users/merc/code/set/src/components/card/index.js":"2","/Users/merc/code/set/src/components/Board/index.js":"3","/Users/merc/code/set/src/components/shape/index.js":"4","/Users/merc/code/set/src/utils/deck.js":"5"},{"size":198,"mtime":1609290825099,"results":"6","hashOfConfig":"7"},{"size":544,"mtime":1609618911169,"results":"8","hashOfConfig":"7"},{"size":1206,"mtime":1609619192948,"results":"9","hashOfConfig":"7"},{"size":2264,"mtime":1609461452075,"results":"10","hashOfConfig":"7"},{"size":6726,"mtime":1609544444488,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g6i1a7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/merc/code/set/src/index.js",[],"/Users/merc/code/set/src/components/card/index.js",[],"/Users/merc/code/set/src/components/Board/index.js",["23","24"],"import { React, useState, useEffect } from 'react';\nimport Card from '../card';\nimport { Deck } from '../../utils/deck.js';\n\nconst styles = {\n    row: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n    },\n    column: {\n        flexBasis: \"100%\",\n    }\n}\n\n\nconst myDeck = new Deck();\n\nexport default function Board() {\n    const [currentCards, setCurrentCards] = useState([]);\n    const [numberOfRows, setNumberOfRows] = useState(3);\n\n    useEffect(() => {\n        const starterCards = {};\n        myDeck.deal(12).forEach((elm, index) => {\n            starterCards['card' + index] = elm;\n        })\n        console.log(starterCards)\n        setCurrentCards(starterCards)\n\n    }, [])\n\n    function populateRow() {\n        for (let i = 0; i < numberOfRows; i++) {\n            return(<div style={styles.row}>\n                {myDeck.deal(4).map(elm => {\n                   return <Card color={elm.color} fill={elm.fill} number={elm.number} shape={elm.shape}></Card>\n                })}\n            </div>)\n        }\n    }\n    return (\n        <div className=\"board\">\n            {populateRow()}\n            {populateRow()}\n            {populateRow()}\n        </div>\n    )\n}\n","/Users/merc/code/set/src/components/shape/index.js",[],"/Users/merc/code/set/src/utils/deck.js",[],{"ruleId":"25","severity":1,"message":"26","line":20,"column":12,"nodeType":"27","messageId":"28","endLine":20,"endColumn":24},{"ruleId":"25","severity":1,"message":"29","line":21,"column":26,"nodeType":"27","messageId":"28","endLine":21,"endColumn":41},"no-unused-vars","'currentCards' is assigned a value but never used.","Identifier","unusedVar","'setNumberOfRows' is assigned a value but never used."]