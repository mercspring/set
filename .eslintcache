[{"/Users/merc/code/set/src/index.js":"1","/Users/merc/code/set/src/components/card/index.js":"2","/Users/merc/code/set/src/components/Board/index.js":"3","/Users/merc/code/set/src/components/shape/index.js":"4","/Users/merc/code/set/src/utils/deck.js":"5","/Users/merc/code/set/src/utils/check.js":"6"},{"size":198,"mtime":1609290825099,"results":"7","hashOfConfig":"8"},{"size":2039,"mtime":1610501629647,"results":"9","hashOfConfig":"8"},{"size":2921,"mtime":1610501433629,"results":"10","hashOfConfig":"8"},{"size":3471,"mtime":1610502617458,"results":"11","hashOfConfig":"8"},{"size":7012,"mtime":1609650482932,"results":"12","hashOfConfig":"8"},{"size":1183,"mtime":1610062565986,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"g6i1a7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/merc/code/set/src/index.js",[],["29","30"],"/Users/merc/code/set/src/components/card/index.js",["31","32"],"/Users/merc/code/set/src/components/Board/index.js",["33","34"],"/Users/merc/code/set/src/components/shape/index.js",[],"/Users/merc/code/set/src/utils/deck.js",["35"],"function Deck() {\n    // this.colors = ['green', 'red', 'purple'];\n    // this.fill = ['empty', 'striped', 'solid'];\n    // this.number = [1, 2, 3];\n    // this.shapes = ['diamond', 'oval', 'squiggle']\n    this.shuffle = function (arr) {\n        let currentIndex = arr.length, temporaryValue, randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = arr[currentIndex];\n            arr[currentIndex] = arr[randomIndex];\n            arr[randomIndex] = temporaryValue;\n        }\n\n        return arr;\n    }\n    this.cards = [\n        { color: 'green', fill: 'empty', number: 1, shape: 'diamond' },\n        { color: 'green', fill: 'empty', number: 1, shape: 'oval' },\n        { color: 'green', fill: 'empty', number: 1, shape: 'squiggle' },\n        { color: 'green', fill: 'empty', number: 2, shape: 'diamond' },\n        { color: 'green', fill: 'empty', number: 2, shape: 'oval' },\n        { color: 'green', fill: 'empty', number: 2, shape: 'squiggle' },\n        { color: 'green', fill: 'empty', number: 3, shape: 'diamond' },\n        { color: 'green', fill: 'empty', number: 3, shape: 'oval' },\n        { color: 'green', fill: 'empty', number: 3, shape: 'squiggle' },\n        { color: 'green', fill: 'striped', number: 1, shape: 'diamond' },\n        { color: 'green', fill: 'striped', number: 1, shape: 'oval' },\n        { color: 'green', fill: 'striped', number: 1, shape: 'squiggle' },\n        { color: 'green', fill: 'striped', number: 2, shape: 'diamond' },\n        { color: 'green', fill: 'striped', number: 2, shape: 'oval' },\n        { color: 'green', fill: 'striped', number: 2, shape: 'squiggle' },\n        { color: 'green', fill: 'striped', number: 3, shape: 'diamond' },\n        { color: 'green', fill: 'striped', number: 3, shape: 'oval' },\n        { color: 'green', fill: 'striped', number: 3, shape: 'squiggle' },\n        { color: 'green', fill: 'solid', number: 1, shape: 'diamond' },\n        { color: 'green', fill: 'solid', number: 1, shape: 'oval' },\n        { color: 'green', fill: 'solid', number: 1, shape: 'squiggle' },\n        { color: 'green', fill: 'solid', number: 2, shape: 'diamond' },\n        { color: 'green', fill: 'solid', number: 2, shape: 'oval' },\n        { color: 'green', fill: 'solid', number: 2, shape: 'squiggle' },\n        { color: 'green', fill: 'solid', number: 3, shape: 'diamond' },\n        { color: 'green', fill: 'solid', number: 3, shape: 'oval' },\n        { color: 'green', fill: 'solid', number: 3, shape: 'squiggle' },\n        { color: 'red', fill: 'empty', number: 1, shape: 'diamond' },\n        { color: 'red', fill: 'empty', number: 1, shape: 'oval' },\n        { color: 'red', fill: 'empty', number: 1, shape: 'squiggle' },\n        { color: 'red', fill: 'empty', number: 2, shape: 'diamond' },\n        { color: 'red', fill: 'empty', number: 2, shape: 'oval' },\n        { color: 'red', fill: 'empty', number: 2, shape: 'squiggle' },\n        { color: 'red', fill: 'empty', number: 3, shape: 'diamond' },\n        { color: 'red', fill: 'empty', number: 3, shape: 'oval' },\n        { color: 'red', fill: 'empty', number: 3, shape: 'squiggle' },\n        { color: 'red', fill: 'striped', number: 1, shape: 'diamond' },\n        { color: 'red', fill: 'striped', number: 1, shape: 'oval' },\n        { color: 'red', fill: 'striped', number: 1, shape: 'squiggle' },\n        { color: 'red', fill: 'striped', number: 2, shape: 'diamond' },\n        { color: 'red', fill: 'striped', number: 2, shape: 'oval' },\n        { color: 'red', fill: 'striped', number: 2, shape: 'squiggle' },\n        { color: 'red', fill: 'striped', number: 3, shape: 'diamond' },\n        { color: 'red', fill: 'striped', number: 3, shape: 'oval' },\n        { color: 'red', fill: 'striped', number: 3, shape: 'squiggle' },\n        { color: 'red', fill: 'solid', number: 1, shape: 'diamond' },\n        { color: 'red', fill: 'solid', number: 1, shape: 'oval' },\n        { color: 'red', fill: 'solid', number: 1, shape: 'squiggle' },\n        { color: 'red', fill: 'solid', number: 2, shape: 'diamond' },\n        { color: 'red', fill: 'solid', number: 2, shape: 'oval' },\n        { color: 'red', fill: 'solid', number: 2, shape: 'squiggle' },\n        { color: 'red', fill: 'solid', number: 3, shape: 'diamond' },\n        { color: 'red', fill: 'solid', number: 3, shape: 'oval' },\n        { color: 'red', fill: 'solid', number: 3, shape: 'squiggle' },\n        { color: 'purple', fill: 'empty', number: 1, shape: 'diamond' },\n        { color: 'purple', fill: 'empty', number: 1, shape: 'oval' },\n        { color: 'purple', fill: 'empty', number: 1, shape: 'squiggle' },\n        { color: 'purple', fill: 'empty', number: 2, shape: 'diamond' },\n        { color: 'purple', fill: 'empty', number: 2, shape: 'oval' },\n        { color: 'purple', fill: 'empty', number: 2, shape: 'squiggle' },\n        { color: 'purple', fill: 'empty', number: 3, shape: 'diamond' },\n        { color: 'purple', fill: 'empty', number: 3, shape: 'oval' },\n        { color: 'purple', fill: 'empty', number: 3, shape: 'squiggle' },\n        { color: 'purple', fill: 'striped', number: 1, shape: 'diamond' },\n        { color: 'purple', fill: 'striped', number: 1, shape: 'oval' },\n        { color: 'purple', fill: 'striped', number: 1, shape: 'squiggle' },\n        { color: 'purple', fill: 'striped', number: 2, shape: 'diamond' },\n        { color: 'purple', fill: 'striped', number: 2, shape: 'oval' },\n        { color: 'purple', fill: 'striped', number: 2, shape: 'squiggle' },\n        { color: 'purple', fill: 'striped', number: 3, shape: 'diamond' },\n        { color: 'purple', fill: 'striped', number: 3, shape: 'oval' },\n        { color: 'purple', fill: 'striped', number: 3, shape: 'squiggle' },\n        { color: 'purple', fill: 'solid', number: 1, shape: 'diamond' },\n        { color: 'purple', fill: 'solid', number: 1, shape: 'oval' },\n        { color: 'purple', fill: 'solid', number: 1, shape: 'squiggle' },\n        { color: 'purple', fill: 'solid', number: 2, shape: 'diamond' },\n        { color: 'purple', fill: 'solid', number: 2, shape: 'oval' },\n        { color: 'purple', fill: 'solid', number: 2, shape: 'squiggle' },\n        { color: 'purple', fill: 'solid', number: 3, shape: 'diamond' },\n        { color: 'purple', fill: 'solid', number: 3, shape: 'oval' },\n        { color: 'purple', fill: 'solid', number: 3, shape: 'squiggle' }\n    ]\n    this.Deck = this.shuffle(this.cards);\n    this.deal = function (number) {\n        const dealtCards = [];\n        for (let i = 0; i < number; i++) {\n            dealtCards.push(this.Deck.pop())\n        }\n        console.log(dealtCards)\n        return dealtCards\n    }\n}\n\nconst deal = function (number, deck) {\n    const dealtCards = [];\n    for (let i = 0; i < number; i++) {\n        dealtCards.push(deck.pop())\n    }\n    console.log(dealtCards)\n    return dealtCards\n}\nconst newDeck = new Deck()\nconsole.log(newDeck.Deck)\n\nexport default newDeck.Deck\n\n",["36","37"],"/Users/merc/code/set/src/utils/check.js",["38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":28,"column":13,"nodeType":"65","messageId":"66","endLine":28,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":30,"column":74,"nodeType":"69","messageId":"70","endLine":30,"endColumn":76},{"ruleId":"63","severity":1,"message":"71","line":1,"column":38,"nodeType":"65","messageId":"66","endLine":1,"endColumn":44},{"ruleId":"72","severity":1,"message":"73","line":55,"column":8,"nodeType":"74","endLine":55,"endColumn":23,"suggestions":"75"},{"ruleId":"63","severity":1,"message":"76","line":115,"column":7,"nodeType":"65","messageId":"66","endLine":115,"endColumn":11},{"ruleId":"59","replacedBy":"77"},{"ruleId":"61","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":107,"nodeType":"81","messageId":"82","endLine":2,"endColumn":109},{"ruleId":"67","severity":1,"message":"68","line":2,"column":123,"nodeType":"69","messageId":"70","endLine":2,"endColumn":125},{"ruleId":"67","severity":1,"message":"68","line":2,"column":155,"nodeType":"69","messageId":"70","endLine":2,"endColumn":157},{"ruleId":"79","severity":1,"message":"80","line":2,"column":171,"nodeType":"81","messageId":"82","endLine":2,"endColumn":173},{"ruleId":"67","severity":1,"message":"68","line":2,"column":187,"nodeType":"69","messageId":"70","endLine":2,"endColumn":189},{"ruleId":"79","severity":1,"message":"80","line":4,"column":111,"nodeType":"81","messageId":"82","endLine":4,"endColumn":113},{"ruleId":"67","severity":1,"message":"68","line":4,"column":127,"nodeType":"69","messageId":"70","endLine":4,"endColumn":129},{"ruleId":"67","severity":1,"message":"68","line":4,"column":159,"nodeType":"69","messageId":"70","endLine":4,"endColumn":161},{"ruleId":"79","severity":1,"message":"80","line":4,"column":175,"nodeType":"81","messageId":"82","endLine":4,"endColumn":177},{"ruleId":"67","severity":1,"message":"68","line":4,"column":191,"nodeType":"69","messageId":"70","endLine":4,"endColumn":193},{"ruleId":"79","severity":1,"message":"80","line":6,"column":109,"nodeType":"81","messageId":"82","endLine":6,"endColumn":111},{"ruleId":"67","severity":1,"message":"68","line":6,"column":124,"nodeType":"69","messageId":"70","endLine":6,"endColumn":126},{"ruleId":"67","severity":1,"message":"68","line":6,"column":154,"nodeType":"69","messageId":"70","endLine":6,"endColumn":156},{"ruleId":"79","severity":1,"message":"80","line":6,"column":169,"nodeType":"81","messageId":"82","endLine":6,"endColumn":171},{"ruleId":"67","severity":1,"message":"68","line":6,"column":184,"nodeType":"69","messageId":"70","endLine":6,"endColumn":186},{"ruleId":"79","severity":1,"message":"80","line":8,"column":121,"nodeType":"81","messageId":"82","endLine":8,"endColumn":123},{"ruleId":"67","severity":1,"message":"68","line":8,"column":138,"nodeType":"69","messageId":"70","endLine":8,"endColumn":140},{"ruleId":"67","severity":1,"message":"68","line":8,"column":172,"nodeType":"69","messageId":"70","endLine":8,"endColumn":174},{"ruleId":"79","severity":1,"message":"80","line":8,"column":189,"nodeType":"81","messageId":"82","endLine":8,"endColumn":191},{"ruleId":"67","severity":1,"message":"68","line":8,"column":206,"nodeType":"69","messageId":"70","endLine":8,"endColumn":208},{"ruleId":"63","severity":1,"message":"83","line":18,"column":10,"nodeType":"65","messageId":"66","endLine":18,"endColumn":20},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'tmpSelectedCards' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deck', 'numberOfRows', and 'setsFound'. Either include them or remove the dependency array. You can also do a functional update 'setSetsFound(s => ...)' if you only need 'setsFound' in the 'setSetsFound' call.","ArrayExpression",["86"],"'deal' is assigned a value but never used.",["84"],["85"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'checkBoard' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [deck, numberOfRows, selectedCards, setsFound]",{"range":"89","text":"90"},[1704,1719],"[deck, numberOfRows, selectedCards, setsFound]"]